fastlane_require 'aws-sdk-kms'

default_platform :android

GOOGLE_KEYS_FILE='../app/google-services.json'

platform :android do
  desc "Build app"
  lane :build do
    version_code = File.read("../build_number.txt").to_i if File.exist?("../build_number.txt")
    puts "Version code: #{version_code}" if version_code
    build_properties = version_code ? { 'versionCode' => version_code } : {}
    gradle(
      task: 'assemble',
      build_type: 'Release',
      properties: build_properties,
    )
  end

  desc "Submit a new Beta Build to Google Play"
  lane :beta do
    build
    upload_to_play_store(
      track: 'internal',
    )
  end

  desc "Deploy a new version to Google Play"
  lane :deploy do
    build
    upload_to_play_store
  end

  desc "Encrypt sensitive keys using AWS KMS"
  lane :encrypt_keys do
    kms = Aws::KMS::Client.new()
    decrypted_file = IO.read(GOOGLE_KEYS_FILE)
    encrypted_data = kms.encrypt(key_id: 'alias/caronae-ios-keys', plaintext: decrypted_file)
    encrypted_text = Base64.encode64(encrypted_data.ciphertext_blob)
    IO.write(GOOGLE_KEYS_FILE + '.encrypted', encrypted_text)

    UI.success("Successfully encrypted keys")
  end

  desc "Decrypt sensitive keys using AWS KMS"
  lane :decrypt_keys do
    kms = Aws::KMS::Client.new()
    encrypted_file = IO.read(GOOGLE_KEYS_FILE + '.encrypted')
    encrypted_data = Base64.decode64(encrypted_file)
    decrypted_data = kms.decrypt(ciphertext_blob: encrypted_data)
    IO.write(GOOGLE_KEYS_FILE, decrypted_data.plaintext)

    UI.success("Successfully decrypted keys")
  end
end
